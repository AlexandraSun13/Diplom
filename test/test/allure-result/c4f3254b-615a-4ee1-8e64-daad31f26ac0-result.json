{"name": "Добавление товара в корзину", "status": "failed", "statusDetails": {"message": "AssertionError: assert 401 == 200\n +  where 401 = <Response [401]>.status_code", "trace": "@allure.epic(\"Читай-город\")\n    @allure.suite('API')\n    @allure.severity(severity_level='blocked')\n    @allure.feature('Test 2')\n    @allure.title(\"Добавление товара в корзину\")\n    def test_product_in_card():\n        url = url_1\n        payload = json.dumps({\n            \"id\": 2839320,\n            \"adData\": {'item_list_name': \"search\", 'product_shelf': \"\"}}\n        )\n        headers = {\n            'authorization': token,\n            'Content-Type': 'application/json',\n            'Cookie': '__ddg1_=h83ZuzjeFslq59sCFBU5'\n        }\n        response = requests.post(\n            url+'/cart/product', headers=headers, data=payload)\n>       assert response.status_code == 200\nE       assert 401 == 200\nE        +  where 401 = <Response [401]>.status_code\n\ntest_api_tests.py:38: AssertionError"}, "start": 1726094154101, "stop": 1726094154304, "uuid": "d4ffd80d-70bf-4f33-87e7-8bdda0f94efa", "historyId": "229dde6f9c910998d83641b0fab6de82", "testCaseId": "229dde6f9c910998d83641b0fab6de82", "fullName": "test_api_tests#test_product_in_card", "labels": [{"name": "severity", "value": "blocked"}, {"name": "feature", "value": "Test 2"}, {"name": "suite", "value": "API"}, {"name": "epic", "value": "Читай-город"}, {"name": "host", "value": "ASUS-ROG"}, {"name": "thread", "value": "10344-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_api_tests"}]}