{"name": "Поиск книги по фамилии автора", "status": "failed", "statusDetails": {"message": "AssertionError: assert 401 == 200\n +  where 401 = <Response [401]>.status_code", "trace": "@allure.epic(\"Читай-город\")\n    @allure.suite('API')\n    @allure.severity(severity_level='critical')\n    @allure.feature('Test 1')\n    @allure.title(\"Поиск книги по фамилии автора\")\n    def test_api():\n        base_url = url_2\n        headers = {'authorization': token}\n        response = requests.get(base_url + '/search/product?customerCityId=213&phrase=%D1%80%D0%B5%D0%BC%D0%B0%D1%80%D0%BA&products%5Bpage%5D=1&products%5Bper-page%5D=48&sortPreset=relevance', headers=headers)\n>       assert response.status_code == 200\nE       assert 401 == 200\nE        +  where 401 = <Response [401]>.status_code\n\ntest_api_tests.py:16: AssertionError"}, "start": 1726094153721, "stop": 1726094153926, "uuid": "a14eff0e-3ba4-43c0-bd4a-979199950094", "historyId": "c674a547f735828439b7620a1bb1e42e", "testCaseId": "c674a547f735828439b7620a1bb1e42e", "fullName": "test_api_tests#test_api", "labels": [{"name": "severity", "value": "critical"}, {"name": "feature", "value": "Test 1"}, {"name": "suite", "value": "API"}, {"name": "epic", "value": "Читай-город"}, {"name": "host", "value": "ASUS-ROG"}, {"name": "thread", "value": "10344-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_api_tests"}]}